/*
	A basic extension of the java.applet.Applet class
 */

import java.awt.*;
import java.applet.*;
import java.io.*;
import java.util.*;

/*En java los tipos primitivos se pasan como parámetros por valor únicamente!!*/

public class Applet1 extends Applet
{
	/**Medidas necesarias para la representación de las garrafas!!*/
    final static int ancho=30;
    final static int alto3=20;
    final static int alto4=30;
    //Separacion entre las garrafas
    final static int separacion=50;
	int x=30;
	int y=10;//Son las coordenadas donde van a ser escritas las figuras!!
	int xx=200;
	int yy=10;
	
	public void init()
	{
		// Take out this line if you don't use symantec.itools.net.RelativeURL or symantec.itools.awt.util.StatusScroller
		symantec.itools.lang.Context.setApplet(this);
	
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setSize(426,700);
		//}}
	}
	
    /**Este método dibuja el esqueleto de la garrafa!!!*/
   void DibujaGarrafaVacia(Graphics g,int tipo){
        //importante!!!
        //gr=g;
        int x2,y2;
        if(tipo==3){
            y2=yy+10;
            g.drawLine(xx,y2,xx,y2+alto3);
            g.drawLine(xx,y2+alto3,xx+ancho,y2+alto3);
            g.drawLine(xx+ancho,y2+alto3,xx+ancho,y2);
            //perimetro dibujado de la garrafa de tres litros
        }else if(tipo==4){
            x2=xx+ancho+separacion;
            g.drawLine(x2,yy,x2,yy+alto4);
            g.drawLine(x2,yy+alto4,x2+ancho,yy+alto4);
            g.drawLine(x2+ancho,yy+alto4,x2+ancho,yy);
            //perimetro dibujado de la garrafa de cuatro litros
        }
    }
void DibujarGarrafa(Graphics g,int i,int contenido){
        g.setColor(Color.blue);
        if(i==3){
            g.fillRect(xx,((alto4/10)-(contenido))*10+yy,ancho,(contenido*10));
            g.setColor(Color.black);
            this.DibujaGarrafaVacia(g,i);
        }else if(i==4){
            g.fillRect(xx+ancho+separacion,((alto4/10)-(contenido))*10+yy,ancho,(contenido*10));
            g.setColor(Color.black);
            this.DibujaGarrafaVacia(g,i);
        }
}

void Garrafas(Graphics g,int c1,int c2){
        DibujarGarrafa(g,3,c1);   
        DibujarGarrafa(g,4,c2);
}

	public void paint (Graphics g){
	    garrprof garr=new garrprof();
	    Stack s=null;
	    Nodo nodo=null;
	    //garr.main2(g,x,y);
	    s=garr.main2(g);
	        
	    while(!s.isEmpty()){
	        nodo=(Nodo)s.pop();//almacena en pila (desapila)
	        g.drawString("profundidad: ",x,y);
 	        Integer i=new Integer(nodo.profundidad);
 	        g.drawString(i.toString(),x+70,y);
 	        y+=18;
 	        g.drawString("G3l: ",x,y);
 	        Integer a=new Integer(nodo.estado.g3);
 	        g.drawString(a.toString(),x+50,y);
 	        y+=18;
 	        g.drawString("G4l: ",x,y);//?????
 	        Integer b=new Integer(nodo.estado.g4);
 	        g.drawString(b.toString(),x+50,y);
 	        y+=18;
 	        /*LAS LETRAS*/
 	        Garrafas(g,nodo.estado.g3,nodo.estado.g4);
 	        yy+=80;
 	    }
	}
	//{{DECLARE_CONTROLS
	//}}
}
